<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqjy.mustang.admin.dao.SysUserProDao">
  
  <!-- 实体映射 -->
  <resultMap id="BaseResultMap" type="com.hqjy.mustang.admin.model.entity.SysUserProEntity">
    <id column="pro_id" jdbcType="BIGINT" property="proId" />
    <result column="id" jdbcType="INTEGER" property="id" />
	<result column="name" jdbcType="VARCHAR" property="name"/>
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <!-- 表基本列 -->
  <sql id="Base_Column_List">
    pro_id, id, user_id, create_user_id, create_time, update_user_id, update_time
  </sql>
  
  <!-- 通用查询sql -->
  <sql id="Base_Where_SQL">
    <where>
		<if test="proId != null and !&quot;&quot;.equals(proId)">and pro_id = #{proId}</if>
		<if test="id != null and !&quot;&quot;.equals(id)">and id = #{id}</if>
		<if test="userId != null and !&quot;&quot;.equals(userId)">and user_id = #{userId}</if>
		<if test="createUserId != null and !&quot;&quot;.equals(createUserId)">and create_user_id = #{createUserId}</if>
		<if test="createTime != null and !&quot;&quot;.equals(createTime)">and DATE_FORMAT(create_time,'%Y-%m-%d') = STR_TO_DATE(#{createTime},'%Y-%m-%d')</if>
		<if test="updateUserId != null and !&quot;&quot;.equals(updateUserId)">and update_user_id = #{updateUserId}</if>
		<if test="updateTime != null and !&quot;&quot;.equals(updateTime)">and DATE_FORMAT(update_time,'%Y-%m-%d') = STR_TO_DATE(#{updateTime},'%Y-%m-%d')</if>
	</where>
  </sql>
  
  <!-- 插入一条记录 -->
  <insert id="save" keyProperty="proId" useGeneratedKeys="true">
    insert into sys_user_pro
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null != proId">pro_id, </if>
			<if test="null != id">id, </if>
			<if test="null != userId">user_id, </if>
			<if test="null != createUserId">create_user_id, </if>
			<if test="null != createTime">create_time, </if>
			<if test="null != updateUserId">update_user_id, </if>
			<if test="null != updateTime">update_time, </if>
		</trim>
	values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null != proId">#{proId}, </if>
			<if test="null != id">#{id}, </if>
			<if test="null != userId">#{userId}, </if>
			<if test="null != createUserId">#{createUserId}, </if>
			<if test="null != createTime">#{createTime}, </if>
			<if test="null != updateUserId">#{updateUserId}, </if>
			<if test="null != updateTime">#{updateTime}, </if>
		</trim>
  </insert>
  
  <!-- 更新一条记录 -->
  <update id="update">
    update sys_user_pro 
		<set>
			<if test="null != proId">pro_id = #{proId}, </if>
			<if test="null != id">id = #{id}, </if>
			<if test="null != userId">user_id = #{userId}, </if>
			<if test="null != createUserId">create_user_id = #{createUserId}, </if>
			<if test="null != createTime">create_time = #{createTime}, </if>
			<if test="null != updateUserId">update_user_id = #{updateUserId}, </if>
			<if test="null != updateTime">update_time = #{updateTime}, </if>
		</set>
		where pro_id = #{proId}
  </update>
  
  <!-- 删除给定主键的记录 -->
  <delete id="delete">
    delete
		from sys_user_pro
	where
		pro_id = #{proId}
  </delete>
  
  <!-- 多个主键批量删除记录 -->
  <delete id="deleteBatch">
    delete
		from sys_user_pro
	where
		pro_id in 
		<foreach collection="array" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
  </delete>
  
  <!-- 多个实体批量删除记录 -->
  <delete id="deleteList">
    delete
		from sys_user_pro
	where
		pro_id in 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item.proId}
		</foreach>
  </delete>
  
  <!-- 主键查找一条记录 -->
  <select id="findOne" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
	from sys_user_pro
	where pro_id = #{proId}
  </select>
  
  <!-- 查询多条 -->
  <select id="findList" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
	from sys_user_pro
		<include refid="Base_Where_SQL" />
  </select>
  
  <!-- 分页查询 -->
  <select id="findPage" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
	from sys_user_pro
		<where>
		<if test="proId != null and !&quot;&quot;.equals(proId)">and pro_id = #{proId}</if>
		<if test="id != null and !&quot;&quot;.equals(id)">and id = #{id}</if>
		<if test="userId != null and !&quot;&quot;.equals(userId)">and user_id = #{userId}</if>
		<if test="createUserId != null and !&quot;&quot;.equals(createUserId)">and create_user_id = #{createUserId}</if>
		<if test="createTime != null and !&quot;&quot;.equals(createTime)">and DATE_FORMAT(create_time,'%Y-%m-%d') = STR_TO_DATE(#{createTime},'%Y-%m-%d')</if>
		<if test="updateUserId != null and !&quot;&quot;.equals(updateUserId)">and update_user_id = #{updateUserId}</if>
		<if test="updateTime != null and !&quot;&quot;.equals(updateTime)">and DATE_FORMAT(update_time,'%Y-%m-%d') = STR_TO_DATE(#{updateTime},'%Y-%m-%d')</if>
	</where>
  </select>
  
  <!-- 查询记录数量 -->
  <select id="count" resultType="int">
    select
		count(*)
	from sys_user_pro
		<include refid="Base_Where_SQL" />
  </select>
  
  <!-- 查询记录是否存在 -->
  <select id="exsit" resultType="boolean">
    select
		count(*)
	from sys_user_pro
		<include refid="Base_Where_SQL" />
  </select>

	<!-- 删除用户部门关系 -->
	<delete id="deleteByUserId">
        DELETE
        FROM sys_user_pro
        WHERE
            user_id = #{userId}
    </delete>

	<!--  查询用户部门列表,包含部门信息 -->
	<select id="findUserProInfoList" resultMap="BaseResultMap">
        select
            sup.id, sup.user_id, sup.pro_id, sup.create_user_id, sup.create_time, sp.name
        from sys_user_pro sup
            left join sys_product sp on sp.pro_id = sup.pro_id
        where user_id = #{userId}
    </select>

</mapper>