<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hqjy.mustang.transfer.crm.dao.TransferCustomerInvalidDao">
  
  <!-- 实体映射 -->
  <resultMap id="BaseResultMap" type="com.hqjy.mustang.transfer.crm.model.entity.TransferCustomerInvalidEntity">
    <id column="invalid_id" jdbcType="BIGINT" property="invalidId" />
    <result column="customer_id" jdbcType="BIGINT" property="customerId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_user_name" jdbcType="VARCHAR" property="updateUserName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
	<result column="name" jdbcType="VARCHAR" property="name" />
	<result column="phone" jdbcType="VARCHAR" property="phone" />
	<result column="transfer_create_time" jdbcType="TIMESTAMP" property="transferCreateTime" />
  </resultMap>
  
  <!-- 表基本列 -->
  <sql id="Base_Column_List">
    invalid_id, customer_id, status, type, memo, create_user_id, create_user_name, create_time, 
    update_user_id, update_user_name, update_time
  </sql>
  
  <!-- 通用查询sql -->
  <sql id="Base_Where_SQL">
    <where>
		<if test="customerId != null and !&quot;&quot;.equals(customerId)">and customer_id = #{customerId}</if>
		<if test="status != null and !&quot;&quot;.equals(status)">and status = #{status}</if>
		<if test="type != null and !&quot;&quot;.equals(type)">and type = #{type}</if>
		<if test="memo != null and !&quot;&quot;.equals(memo)">and memo = #{memo}</if>
		<if test="createUserId != null and !&quot;&quot;.equals(createUserId)">and create_user_id = #{createUserId}</if>
		<if test="createUserName != null and !&quot;&quot;.equals(createUserName)">and create_user_name = #{createUserName}</if>
		<if test="createTime != null and !&quot;&quot;.equals(createTime)">and DATE_FORMAT(create_time,'%Y-%m-%d') = STR_TO_DATE(#{createTime},'%Y-%m-%d')</if>
		<if test="updateUserId != null and !&quot;&quot;.equals(updateUserId)">and update_user_id = #{updateUserId}</if>
		<if test="updateUserName != null and !&quot;&quot;.equals(updateUserName)">and update_user_name = #{updateUserName}</if>
		<if test="updateTime != null and !&quot;&quot;.equals(updateTime)">and DATE_FORMAT(update_time,'%Y-%m-%d') = STR_TO_DATE(#{updateTime},'%Y-%m-%d')</if>
	</where>
  </sql>
  
  <!-- 插入一条记录 -->
  <insert id="save" keyProperty="invalidId" useGeneratedKeys="true">
    insert into transfer_customer_invalid
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null != customerId">customer_id, </if>
			<if test="null != status">status, </if>
			<if test="null != type">type, </if>
			<if test="null != memo">memo, </if>
			<if test="null != createUserId">create_user_id, </if>
			<if test="null != createUserName">create_user_name, </if>
			<if test="null != createTime">create_time, </if>
			<if test="null != updateUserId">update_user_id, </if>
			<if test="null != updateUserName">update_user_name, </if>
			<if test="null != updateTime">update_time, </if>
		</trim>
	values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="null != customerId">#{customerId}, </if>
			<if test="null != status">#{status}, </if>
			<if test="null != type">#{type}, </if>
			<if test="null != memo">#{memo}, </if>
			<if test="null != createUserId">#{createUserId}, </if>
			<if test="null != createUserName">#{createUserName}, </if>
			<if test="null != createTime">#{createTime}, </if>
			<if test="null != updateUserId">#{updateUserId}, </if>
			<if test="null != updateUserName">#{updateUserName}, </if>
			<if test="null != updateTime">#{updateTime}, </if>
		</trim>
  </insert>
  
  <!-- 更新一条记录 -->
  <update id="update">
    update transfer_customer_invalid 
		<set>
			<if test="null != customerId">customer_id = #{customerId}, </if>
			<if test="null != status">status = #{status}, </if>
			<if test="null != type">type = #{type}, </if>
			<if test="null != memo">memo = #{memo}, </if>
			<if test="null != createUserId">create_user_id = #{createUserId}, </if>
			<if test="null != createUserName">create_user_name = #{createUserName}, </if>
			<if test="null != createTime">create_time = #{createTime}, </if>
			<if test="null != updateUserId">update_user_id = #{updateUserId}, </if>
			<if test="null != updateUserName">update_user_name = #{updateUserName}, </if>
			<if test="null != updateTime">update_time = #{updateTime}, </if>
		</set>
		where invalid_id = #{invalidId}
  </update>
  
  <!-- 删除给定主键的记录 -->
  <delete id="delete">
    delete
		from transfer_customer_invalid
	where
		invalid_id = #{invalidId}
  </delete>
  
  <!-- 多个主键批量删除记录 -->
  <delete id="deleteBatch">
    delete
		from transfer_customer_invalid
	where
		invalid_id in 
		<foreach collection="array" index="index" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
  </delete>
  
  <!-- 多个实体批量删除记录 -->
  <delete id="deleteList">
    delete
		from transfer_customer_invalid
	where
		invalid_id in 
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
			#{item.invalidId}
		</foreach>
  </delete>
  
  <!-- 主键查找一条记录 -->
  <select id="findOne" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
	from transfer_customer_invalid
	where invalid_id = #{invalidId}
  </select>
  
  <!-- 查询多条 -->
  <select id="findList" resultMap="BaseResultMap">
    select
		<include refid="Base_Column_List" />
	from transfer_customer_invalid
		<include refid="Base_Where_SQL" />
  </select>
  
  <!-- 查询记录数量 -->
  <select id="count" resultType="int">
    select
		count(*)
	from transfer_customer_invalid
		<include refid="Base_Where_SQL" />
  </select>
  
  <!-- 查询记录是否存在 -->
  <select id="exsit" resultType="boolean">
    select
		count(*)
	from transfer_customer_invalid
		<include refid="Base_Where_SQL" />
  </select>

	<!-- 分页查询 -->
	<select id="findPage" resultMap="BaseResultMap">
		select
		tci.invalid_id, tci.create_user_name, tci.create_user_id, tci.type, tci.create_time, tci.status, tci.memo,
		tci.customer_id, tc.name, tc.phone, tc.create_time as transfer_create_time
		from transfer_customer_invalid tci
		inner join transfer_customer tc on tc.customer_id = tci.customer_id
		<where>
			tc.status in (1,2)
			<!-- 数据权限过滤：取当前用户部门及其所有子部门的客户数据-->
			<if test="userAllDeptId != null and !&quot;&quot;.equals(userAllDeptId)">
				and tc.dept_id in ${userAllDeptId}
			</if>
			<if test="customerId != null and !&quot;&quot;.equals(customerId)">and tc.customer_id = #{customerId}</if>
			<if test="userId !=null and !&quot;&quot;.equals(userId)">
				and tc.user_id=#{userId}
			</if>
			<if test="createName != null and !&quot;&quot;.equals(createName)">and tci.create_user_name like
				concat('%',#{createName},'%')
			</if>
			<if test="name != null and !&quot;&quot;.equals(name)">and tc.name like
				concat('%',#{name},'%')
			</if>
			<if test="beginCreateTime != null and beginCreateTime != '' and endCreateTime != null and endCreateTime != ''">
				and tc.create_time between #{beginCreateTime} and #{endCreateTime}
			</if>
			<if test=" beginInvalidTime != null and beginInvalidTime != '' and endInvalidTime != null and endInvalidTime != ''">
				and  tci.create_time between #{beginInvalidTime} and #{endInvalidTime}
			</if>
		</where>
	</select>

	<select id="getCustomerByCustomerId" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from transfer_customer_invalid
		where
		customer_id = #{customerId}
	</select>
  

</mapper>